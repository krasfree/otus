openapi: 3.0.1
info:
  title: Оформление заказа
  version: 1.0.0
tags:
  - name: user
    description: cервис пользователей
  - name: billing
    description: сервис биллинга
  - name: order
    description: сервис заказов
  - name: notification
    description: сервис уведомлений
paths:
  /users/register:
    post:
      tags:
        - user
      summary: Регистрация пользователя
      description: Регистрация пользователя. После регистрации создается счет пользователю в сервисе биллинга
      operationId: registerUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: Регистрация прошла успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
  '/users/{userId}':
    get:
      tags:
        - user
      summary: Ресурс пользователя по ID
      description: Вернуть данные пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Успешный запрос на создание пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403': 
          description: Нет доступа к данному пользователю
        '400':
          description: Неправильный запрос
        '404':
          description: Такого пользователя нет
  /billing/create:
    post:
      tags:
        - billing
      summary: Заведение счета пользователю
      description: Метод для заведения и создания пользовательского счета
      operationId: createUserBill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId: 
                  type: integer
              required: 
                - userId
            example: 
              userId: 77
      responses:
        '201':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              example: 
                id: 42
                
  /billing/deposit:
    post:
      tags:
        - billing
      summary: Внесение денег на счет
      description: Внесение денег на счет
      operationId: depositBill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId: 
                  type: integer
                sum:
                  type: number
              required: 
                - userId
                - sum
            example: 
              userId: 77
              sum: 2000.2
      responses:
        '200':
          description: Успешный ответ
        '400':
          description: Неправильный запрос
        '404':
          description: Пользователь не найден            
                
  /billing/withdraw:
    post:
      tags:
        - billing
      summary: Снятие денег со счета
      description: Снятие денег со счета
      operationId: withdrawBill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId: 
                  type: integer
                sum:
                  type: number
              required: 
                - userId
                - sum
            example: 
              userId: 77
              sum: 2000.2
      responses:
        '200':
          description: Успешный ответ
        '400':
          description: Неправильный запрос
        '404':
          description: Пользователь не найден                 
  
               
  /order/create:
    post:
      tags:
        - order
      summary: Создание заказа
      description: Создание пользовательского заказа
      operationId: createOrder
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '200':
          description: Успешный ответ
        '400':
          description: Неправильный запрос
        '404':
          description: Пользователь не найден     
        
  /send:
    post:
      tags:
        - notification
      summary: Отправка почты на email
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                templateId:
                  type: integer
                context: 
                  type: object
              required: 
                - templateId
                - context
            example: 
              email: "ivan@ivan.com"
              templateId: 42
              context: 
                firstName: Иван
                lastName: Иванов
                orderNumber: 400
      responses:
        '202':
          description: Отсылка взята в работу
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId: 
                    type: string
              example: 
                jobId: 00012323456789
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
      required: 
          - username
          - password
          - email
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
        address: 
          type: string
        totalSum:
          type: number
        products: 
          type: array
          items:
             type: object
             properties:
              id:
                type: integer
              name:
                type: string
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                username: ivan
                firstName: Иван
                lastName: Иванов
                email: ivan@ivan.com
                phone: '+700000000'
                password: 'qwerty'
                address: 'ул. Ленина 157 - 17'
      description: Необходимые данные по пользователю
      required: true
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
          examples:
            sample-array:
              summary: Обычный заказ
              value:
                address: Адрес
                products: 
                  - id: 0
                    name: "Наименование товара" 
      description: Необходимые данные по заказу
      required: true
      